var<private> xvipaiai_1: vec2<i32> = vec2<i32>(42i, 43i);
var<private> xvupaiai_1: vec2<u32> = vec2<u32>(44u, 45u);
var<private> xvfpaiai_1: vec2<f32> = vec2<f32>(46f, 47f);
var<private> xvupuai_2: vec2<u32> = vec2<u32>(42u, 43u);
var<private> xvupaiu_2: vec2<u32> = vec2<u32>(42u, 43u);
var<private> xvuuai_2: vec2<u32> = vec2<u32>(42u, 43u);
var<private> xvuaiu_2: vec2<u32> = vec2<u32>(42u, 43u);
var<private> xmfpaiaiaiai_1: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
var<private> xmfpafaiaiai_1: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
var<private> xmfpaiafaiai_1: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
var<private> xmfpaiaiafai_1: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
var<private> xmfpaiaiaiaf_1: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
var<private> xvispai_1: vec2<i32> = vec2(1i);
var<private> xvfspaf_1: vec2<f32> = vec2(1f);
var<private> xvis_ai_1: vec2<i32> = vec2(1i);
var<private> xvus_ai_1: vec2<u32> = vec2(1u);
var<private> xvfs_ai_1: vec2<f32> = vec2(1f);
var<private> xvfs_af_1: vec2<f32> = vec2(1f);
var<private> xafafaf_1: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> xafaiai_1: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> xafpaiai_1: array<i32, 2> = array<i32, 2>(1i, 2i);
var<private> xafpaiaf_1: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> xafpafai_1: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> xafpafaf_1: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> ivispai: vec2<i32> = vec2(1i);
var<private> ivfspaf: vec2<f32> = vec2(1f);
var<private> ivis_ai: vec2<i32> = vec2(1i);
var<private> ivus_ai: vec2<u32> = vec2(1u);
var<private> ivfs_ai: vec2<f32> = vec2(1f);
var<private> ivfs_af: vec2<f32> = vec2(1f);
var<private> iafafaf: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> iafaiai: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> iaipaiai_1: array<i32, 2> = array<i32, 2>(1i, 2i);
var<private> iafpafaf_1: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> iafpaiaf_1: array<f32, 2> = array<f32, 2>(1f, 2f);
var<private> iafpafai_1: array<f32, 2> = array<f32, 2>(1f, 2f);

fn all_constant_arguments() {
    var xvipaiai: vec2<i32> = vec2<i32>(42i, 43i);
    var xvupaiai: vec2<u32> = vec2<u32>(44u, 45u);
    var xvfpaiai: vec2<f32> = vec2<f32>(46f, 47f);
    var xvupuai: vec2<u32> = vec2<u32>(42u, 43u);
    var xvupaiu: vec2<u32> = vec2<u32>(42u, 43u);
    var xvuuai: vec2<u32> = vec2<u32>(42u, 43u);
    var xvuaiu: vec2<u32> = vec2<u32>(42u, 43u);
    var xmfpaiaiaiai: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfpafaiaiai: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfpaiafaiai: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfpaiaiafai: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfpaiaiaiaf: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfp_faiaiai: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfpai_faiai: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfpaiai_fai: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xmfpaiaiai_f: mat2x2<f32> = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    var xvispai: vec2<i32> = vec2(1i);
    var xvfspaf: vec2<f32> = vec2(1f);
    var xvis_ai: vec2<i32> = vec2(1i);
    var xvus_ai: vec2<u32> = vec2(1u);
    var xvfs_ai: vec2<f32> = vec2(1f);
    var xvfs_af: vec2<f32> = vec2(1f);
    var xafafaf: array<f32, 2> = array<f32, 2>(1f, 2f);
    var xaf_faf: array<f32, 2> = array<f32, 2>(1f, 2f);
    var xafaf_f: array<f32, 2> = array<f32, 2>(1f, 2f);
    var xafaiai: array<f32, 2> = array<f32, 2>(1f, 2f);
    var xai_iai: array<i32, 2> = array<i32, 2>(1i, 2i);
    var xaiai_i: array<i32, 2> = array<i32, 2>(1i, 2i);
    var xaipaiai: array<i32, 2> = array<i32, 2>(1i, 2i);
    var xafpaiai: array<f32, 2> = array<f32, 2>(1f, 2f);
    var xafpaiaf: array<f32, 2> = array<f32, 2>(1f, 2f);
    var xafpafai: array<f32, 2> = array<f32, 2>(1f, 2f);
    var xafpafaf: array<f32, 2> = array<f32, 2>(1f, 2f);
    var iaipaiai: array<i32, 2> = array<i32, 2>(1i, 2i);
    var iafpaiaf: array<f32, 2> = array<f32, 2>(1f, 2f);
    var iafpafai: array<f32, 2> = array<f32, 2>(1f, 2f);
    var iafpafaf: array<f32, 2> = array<f32, 2>(1f, 2f);

    xvipaiai = vec2<i32>(42i, 43i);
    xvupaiai = vec2<u32>(44u, 45u);
    xvfpaiai = vec2<f32>(46f, 47f);
    xvupuai = vec2<u32>(42u, 43u);
    xvupaiu = vec2<u32>(42u, 43u);
    xvuuai = vec2<u32>(42u, 43u);
    xvuaiu = vec2<u32>(42u, 43u);
    xmfpaiaiaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfpafaiaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfpaiafaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfpaiaiafai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfpaiaiaiaf = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfp_faiaiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfpai_faiai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfpaiai_fai = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xmfpaiaiai_f = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, 4f));
    xvispai = vec2(1i);
    xvfspaf = vec2(1f);
    xvis_ai = vec2(1i);
    xvus_ai = vec2(1u);
    xvfs_ai = vec2(1f);
    xvfs_af = vec2(1f);
    xafafaf = array<f32, 2>(1f, 2f);
    xaf_faf = array<f32, 2>(1f, 2f);
    xafaf_f = array<f32, 2>(1f, 2f);
    xafaiai = array<f32, 2>(1f, 2f);
    xai_iai = array<i32, 2>(1i, 2i);
    xaiai_i = array<i32, 2>(1i, 2i);
    xaipaiai = array<i32, 2>(1i, 2i);
    xafpaiai = array<f32, 2>(1f, 2f);
    xafpaiaf = array<f32, 2>(1f, 2f);
    xafpafai = array<f32, 2>(1f, 2f);
    xafpafaf = array<f32, 2>(1f, 2f);
    iaipaiai = array<i32, 2>(1i, 2i);
    iafpaiaf = array<f32, 2>(1f, 2f);
    iafpafai = array<f32, 2>(1f, 2f);
    iafpafaf = array<f32, 2>(1f, 2f);
    return;
}

fn mixed_constant_and_runtime_arguments() {
    var u: u32;
    var i: i32;
    var f: f32;
    var xvupuai_1: vec2<u32>;
    var xvupaiu_1: vec2<u32>;
    var xvuuai_1: vec2<u32>;
    var xvuaiu_1: vec2<u32>;
    var xmfp_faiaiai_1: mat2x2<f32>;
    var xmfpai_faiai_1: mat2x2<f32>;
    var xmfpaiai_fai_1: mat2x2<f32>;
    var xmfpaiaiai_f_1: mat2x2<f32>;
    var xaf_faf_1: array<f32, 2>;
    var xafaf_f_1: array<f32, 2>;
    var xaf_fai: array<f32, 2>;
    var xafai_f: array<f32, 2>;
    var xai_iai_1: array<i32, 2>;
    var xaiai_i_1: array<i32, 2>;
    var xafp_faf: array<f32, 2>;
    var xafpaf_f: array<f32, 2>;
    var xafp_fai: array<f32, 2>;
    var xafpai_f: array<f32, 2>;
    var xaip_iai: array<i32, 2>;
    var xaipai_i: array<i32, 2>;

    let _e3 = u;
    xvupuai_1 = vec2<u32>(_e3, 43u);
    let _e7 = u;
    xvupaiu_1 = vec2<u32>(42u, _e7);
    let _e11 = u;
    xvuuai_1 = vec2<u32>(_e11, 43u);
    let _e15 = u;
    xvuaiu_1 = vec2<u32>(42u, _e15);
    let _e19 = f;
    xmfp_faiaiai_1 = mat2x2<f32>(vec2<f32>(_e19, 2f), vec2<f32>(3f, 4f));
    let _e27 = f;
    xmfpai_faiai_1 = mat2x2<f32>(vec2<f32>(1f, _e27), vec2<f32>(3f, 4f));
    let _e35 = f;
    xmfpaiai_fai_1 = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(_e35, 4f));
    let _e43 = f;
    xmfpaiaiai_f_1 = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, _e43));
    let _e51 = f;
    xaf_faf_1 = array<f32, 2>(_e51, 2f);
    let _e55 = f;
    xafaf_f_1 = array<f32, 2>(1f, _e55);
    let _e59 = f;
    xaf_fai = array<f32, 2>(_e59, 2f);
    let _e63 = f;
    xafai_f = array<f32, 2>(1f, _e63);
    let _e67 = i;
    xai_iai_1 = array<i32, 2>(_e67, 2i);
    let _e71 = i;
    xaiai_i_1 = array<i32, 2>(1i, _e71);
    let _e75 = f;
    xafp_faf = array<f32, 2>(_e75, 2f);
    let _e79 = f;
    xafpaf_f = array<f32, 2>(1f, _e79);
    let _e83 = f;
    xafp_fai = array<f32, 2>(_e83, 2f);
    let _e87 = f;
    xafpai_f = array<f32, 2>(1f, _e87);
    let _e91 = i;
    xaip_iai = array<i32, 2>(_e91, 2i);
    let _e95 = i;
    xaipai_i = array<i32, 2>(1i, _e95);
    let _e99 = u;
    xvupuai_1 = vec2<u32>(_e99, 43u);
    let _e102 = u;
    xvupaiu_1 = vec2<u32>(42u, _e102);
    let _e105 = u;
    xvuuai_1 = vec2<u32>(_e105, 43u);
    let _e108 = u;
    xvuaiu_1 = vec2<u32>(42u, _e108);
    let _e111 = f;
    xmfp_faiaiai_1 = mat2x2<f32>(vec2<f32>(_e111, 2f), vec2<f32>(3f, 4f));
    let _e118 = f;
    xmfpai_faiai_1 = mat2x2<f32>(vec2<f32>(1f, _e118), vec2<f32>(3f, 4f));
    let _e125 = f;
    xmfpaiai_fai_1 = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(_e125, 4f));
    let _e132 = f;
    xmfpaiaiai_f_1 = mat2x2<f32>(vec2<f32>(1f, 2f), vec2<f32>(3f, _e132));
    let _e139 = f;
    xaf_faf_1 = array<f32, 2>(_e139, 2f);
    let _e142 = f;
    xafaf_f_1 = array<f32, 2>(1f, _e142);
    let _e145 = f;
    xaf_fai = array<f32, 2>(_e145, 2f);
    let _e148 = f;
    xafai_f = array<f32, 2>(1f, _e148);
    let _e151 = i;
    xai_iai_1 = array<i32, 2>(_e151, 2i);
    let _e154 = i;
    xaiai_i_1 = array<i32, 2>(1i, _e154);
    let _e157 = f;
    xafp_faf = array<f32, 2>(_e157, 2f);
    let _e160 = f;
    xafpaf_f = array<f32, 2>(1f, _e160);
    let _e163 = f;
    xafp_fai = array<f32, 2>(_e163, 2f);
    let _e166 = f;
    xafpai_f = array<f32, 2>(1f, _e166);
    let _e169 = i;
    xaip_iai = array<i32, 2>(_e169, 2i);
    let _e172 = i;
    xaipai_i = array<i32, 2>(1i, _e172);
    return;
}

